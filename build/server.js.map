{"version":3,"sources":["../src/server.js"],"names":["app","token","witCall","axios","get","message","headers","Authorization","then","response","console","log","data","entities","catch","error","use","req","res","next","header","port","process","env","PORT","bodyParser","urlencoded","extended","json","post","intent","query","body","text","value","search_query","obj","find","o","name","messageRepsonse","JSON","stringify","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEA,IAAMC,QAAQ,kCAAd;;AAEA,IAAMC,UAAU,SAAVA,OAAU,UAAW;AACzBC,kBACGC,GADH,8CACkDC,OADlD,EAC6D;AACzDC,aAAS,EAAEC,2BAAyBN,KAA3B;AADgD,GAD7D,EAIGO,IAJH,CAIQ,UAASC,QAAT,EAAmB;AACvBC,YAAQC,GAAR,CAAYF,SAASG,IAAT,CAAcC,QAA1B;AACD,GANH,EAOGC,KAPH,CAOS,UAASC,KAAT,EAAgB;AACrB;AACAL,YAAQC,GAAR,CAAYI,KAAZ;AACD,GAVH;AAWD,CAZD;;AAcAf,IAAIgB,GAAJ,CAAQ,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CACE,8BADF,EAEE,gDAFF;AAIAD;AACD,CAPD;;AASA,IAAME,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACAxB,IAAIgB,GAAJ,CAAQS,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACA3B,IAAIgB,GAAJ,CAAQS,qBAAWG,IAAX,EAAR;AACA5B,IAAII,GAAJ,CAAQ,GAAR,EAAa,UAACa,GAAD,EAAMC,GAAN;AAAA,SAAcA,IAAIU,IAAJ,CAAS,EAAEV,KAAK,QAAP,EAAT,CAAd;AAAA,CAAb;;AAEAlB,IAAI6B,IAAJ,CAAS,OAAT,EAAkB,UAACZ,GAAD,EAAMC,GAAN,EAAc;AAC9B,MAAIY,eAAJ;AACA,MAAIC,cAAJ;;AAEA5B,kBACGC,GADH,8CACkDa,IAAIe,IAAJ,CAASC,IAD3D,EACmE;AAC/D3B,aAAS,EAAEC,2BAAyBN,KAA3B;AADsD,GADnE,EAIGO,IAJH,CAIQ,UAASC,QAAT,EAAmB;AACvBC,YAAQC,GAAR,CAAYF,SAASG,IAAT,CAAcC,QAA1B;AACAiB,aAASrB,SAASG,IAAT,CAAcC,QAAd,CAAuBiB,MAAvB,CAA8B,CAA9B,EAAiCI,KAA1C;AACAH,YAAQtB,SAASG,IAAT,CAAcC,QAAd,CAAuBsB,YAAvB,CAAoC,CAApC,EAAuCD,KAA/C;AACAxB,YAAQC,GAAR,CAAYmB,MAAZ;AACA,QAAIM,MAAMxB,eAAKyB,IAAL,CAAU;AAAA,aAAKC,EAAEC,IAAF,KAAWR,KAAhB;AAAA,KAAV,CAAV;AACA,QAAIS,wBAAJ;;AAEAA,sBAAkBC,KAAKC,SAAL,CAAeN,IAAIN,MAAJ,CAAf,CAAlB;;AAEApB,YAAQC,GAAR,CAAY6B,eAAZ;AACA,WAAOtB,IAAIU,IAAJ,CAAS,EAAEV,KAAK,MAAP,EAAT,CAAP;AACD,GAhBH,EAiBGJ,KAjBH,CAiBS,UAASC,KAAT,EAAgB;AACrB;AACA,WAAOG,IAAIU,IAAJ,CAAS,EAAEV,KAAK,WAAP,EAAT,CAAP;AACD,GApBH;AAqBD,CAzBD;;AA2BAlB,IAAI2C,MAAJ,CAAWtB,IAAX,EAAiB,YAAM;AACrBX,UAAQC,GAAR,wBAAiCU,IAAjC;AACD,CAFD","file":"server.js","sourcesContent":["import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport data from \"../data.json\";\nimport axios from \"axios\";\n\nconst app = express();\n\nconst token = \"5GYRTTPGLSHSDDIYQ5K6SMVYUFADQIZO\";\n\nconst witCall = message => {\n  axios\n    .get(`https://api.wit.ai/message?v=20190618&q=${message}`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(function(response) {\n      console.log(response.data.entities);\n    })\n    .catch(function(error) {\n      // handle error\n      console.log(error);\n    });\n};\n\napp.use(function(req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\n    \"Access-Control-Allow-Headers\",\n    \"Origin, X-Requested-With, Content-Type, Accept\"\n  );\n  next();\n});\n\nconst port = process.env.PORT || 3000;\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\napp.get(\"/\", (req, res) => res.json({ res: \"Coucou\" }));\n\napp.post(\"/talk\", (req, res) => {\n  let intent;\n  let query;\n\n  axios\n    .get(`https://api.wit.ai/message?v=20190618&q=${req.body.text}`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then(function(response) {\n      console.log(response.data.entities);\n      intent = response.data.entities.intent[0].value;\n      query = response.data.entities.search_query[0].value;\n      console.log(intent);\n      let obj = data.find(o => o.name === query);\n      let messageRepsonse;\n\n      messageRepsonse = JSON.stringify(obj[intent]);\n\n      console.log(messageRepsonse);\n      return res.json({ res: \"talk\" });\n    })\n    .catch(function(error) {\n      // handle error\n      return res.json({ res: \"not found\" });\n    });\n});\n\napp.listen(port, () => {\n  console.log(`connected to port ${port}`);\n});\n"]}